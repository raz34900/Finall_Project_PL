expr		: KEYWORD:VAR IDENTIFIER EQ expr
			: comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*

comp-expr	: NOT comp-expr
			: arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr	:	term ((PLUS|MINUS) term)*

term		: factor ((MUL|DIV) factor)*

call		: factor (LPAREN (expr (COMMA expr)*)? RPAREN)?

factor  	: INT|IDENTIFIRE
			: (PLUS|MINUS) factor
			: LPAREN expr RPAREN
			: if-expr
			: func-def
			
if-expr		: KEYWORD:IF expr KEYWORD:THEN expr 
			: (KEYWORD:ELIF expr KEYWORD:THEN expr)*
			:(KEYWORD:ELSE expr)?

func-def	: KEYWORD:FUNC IDENTIFIER?
			: LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
			: ARROW expr
			